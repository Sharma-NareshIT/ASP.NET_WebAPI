1. Create a new Database in SQL Server
	  "ApiDb"
2. Add a new Table 
	  "tblProducts"
       ProductId  int [Pk] - Auto Generated
       Name varchar
       Price money

3. Add records into Table

4. Create a new Web API Project

	  "Name : WebApiDemo"

5. Install  "Entity Framework 6"  from Nuget Package Manager.

6. Update or Install  Packages
	- bootstrap
	- JQuery

7. Add ConnectionString in Web.Config

<connectionStrings>
    <add name="ApiConnection" providerName="System.Data.SqlClient" connectionString="Data Source=(local); Initial Catalog=ApiDb; user id=sa; password=123"/>
  </connectionStrings>

8. Goto Models folder and add class
	      "Product.cs"
using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;

namespace WebAPIdemo.Models
{
    [Table("tblProducts")]
    public class Product
    {
        [Key]
        public int ProductId { get; set; }
        public string Name { get; set; }
        public decimal? Price { get; set; }
    }
}

Note: Context and DbSet refers to UOW [ Unit of Work and Repository of Patterns]

9. Add another class into Models folder
	      "ProductsContext.cs"
using System.Data.Entity;

namespace WebAPIdemo.Models
{
    public class ProductsContext : DbContext
    {
        public ProductsContext()
            :base("ApiConnection")
        {
           
        }
       public DbSet<Product> ProductsTable { get; set; }
    }
}

10. Goto Controllers and Add  a new API controller
	- Web API 2 Controller Empty

	     "ProductsController"
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using WebAPIdemo.Models;

namespace WebAPIdemo.Controllers
{
    public class ProductsController : ApiController
    {
        ProductsContext db = new ProductsContext();

        //GET - api/products
        public IHttpActionResult Get()
        {
            return Ok(db.ProductsTable.ToList());
        }

        //GET - api/products/{id}
        public IHttpActionResult Get(int? id)
        {
            Product product = db.ProductsTable.Find(id);
            if(product==null)
            {
                return NotFound();
            }
            return Ok(product);
        }
    }
}

Request	URI		Purpose
-----------------------------------------------------------------------------
GET	api/products    It returns list of all products
GET	api/products/1 It returns specific product.

11. Add a new HTML page into project
	              "index.html"
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Products API</title>
    <style>
        .section {
            margin-top: 50px;
        }
    </style>
    <link rel="stylesheet" href="Content/bootstrap.css" />
    <script src="Scripts/jquery-3.5.1.js"></script>
    <script>
        $(function () {
            $("#btnAll").click(function () {
                $.ajax({
                    url: "api/products"
                })
                    .done(function (data) {
                        $.each(data, function (key, value) {
                            $(`<tr><td>${value.ProductId}</td><td>${value.Name}</td><td>${value.Price}</td></tr>`).appendTo("#tbody");
                        })
                    })
                    .fail(function () {
                        alert("Something Went Wrong");
                    })
            })
            $("#btnSearch").click(function () {
                var id = $("#txtId").val();
                var apiUrl = "api/products/" + id;
                $.ajax({
                    url: apiUrl
                })
                    .done(function (data) {
                        $("#lblId").html(data.ProductId);
                        $("#lblName").html(data.Name);
                        $("#lblPrice").html(data.Price);
                    })
                    .fail(function () {
                        alert("Something Went Wrong");
                    })
            })
        })
    </script>
</head>
<body>
    <div class="container">
        <h2>Products API</h2>
        <div class="btn-toolbar bg-danger justify-content-between">
            <div class="btn-group">
                <button id="btnAll" class="btn btn-danger">Get All Products</button>
            </div>
            <div class="btn-group">
                <input type="text" id="txtId" class="form-control" placeholder="Product Id" />
                <button id="btnSearch" class="btn btn-danger">Search</button>
            </div>
        </div>
        <div class="section">
           <div class="row">
               <div class="col-6">
                   <h3>Products List</h3>
                   <table class="table table-hover">
                       <thead>
                           <tr>
                               <th>Product Id</th>
                               <th>Name</th>
                               <th>Price</th>
                           </tr>
                       </thead>
                       <tbody id="tbody">

                       </tbody>
                   </table>
               </div>
               <div class="col-4">
                   <h3>Details</h3>
                   <dl>
                       <dt>Product Id</dt>
                       <dd id="lblId"></dd>
                       <dt>Name</dt>
                       <dd id="lblName"></dd>
                       <dt>Price</dt>
                       <dd id="lblPrice"></dd>
                   </dl>
               </div>
           </div>
        </div>
    </div>
</body>
</html> 

