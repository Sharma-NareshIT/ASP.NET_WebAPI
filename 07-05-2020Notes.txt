            Database Related Logic using ADO.NET
	         [ CRUD Operations ]

1. Create a new Database on Sql Server 
	Name	: ApiDb
	Table	: tblproducts
	Fields:	
	        ProductId int (PK) -AutoGenerated
	        Name varchar
	        Price money
2. Create Stored Procedures
	- spGetProducts
	- spAddProducts
	- spUpdateProducts
	- spDeleteProducts

3. Goto Web API 2 Project  
4. Goto "Web.Config" and write the connection string.

<connectionStrings>
    <add name="ApiConnection" providerName="System.Data.SqlClient" connectionString="Data Source=(local); Initial Catalog=ApiDb; user id=sa; password=123"/>
</connectionStrings>

5. Add a new Project into your solution
      Project Type : C# Class Library (.NET Framework)
	                     [.dll]
      Name	           : BusinessLayer

6. Add folder
	- Contracts
	- Services

7. Add following files into contracts
	- IProduct.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusinessLayer.Contracts
{
    interface IProduct
    {
        int ProductId { get; set; }
        string Name { get; set; }
        decimal? Price { get; set; }
    }
}


	- IProductCRUDContract.cs


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusinessLayer.Contracts
{
    interface IProductsCRUDContract
    {
        void AddProduct();
        void UpdateProduct();
        void DeleteProduct();
    }
}

8. Add following files into Services folder
	Product.cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using BusinessLayer.Contracts;

namespace BusinessLayer.Services
{
    public class Product : IProduct
    {
        public int ProductId { get; set; }
        public string Name { get; set; }
        public decimal? Price { get; set; }
    }
}

	 ProductsCRUDService.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using BusinessLayer.Contracts;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

namespace BusinessLayer.Services
{
    public class ProductsCRUDService : IProductsCRUDContract
    {
        string strcon = ConfigurationManager.ConnectionStrings["ApiConnection"].ToString();
        SqlConnection con;
        SqlCommand cmd;

        public IEnumerable<Product> GetProducts
        {
            get
            {
                List<Product> products = new List<Product>();
                con = new SqlConnection(strcon);
                con.Open();
                cmd = new SqlCommand("spGetProducts", con);
                SqlDataReader dr = cmd.ExecuteReader();
                while(dr.Read())
                {
                    Product product = new Product();
                    product.ProductId = Convert.ToInt32(dr["ProductId"]);
                    product.Name = dr["Name"].ToString();
                    product.Price = Convert.ToDecimal(dr["Price"]);
                    products.Add(product);
                }
                dr.Close();
                con.Close();
                return products;
            }
        }
        public void AddProduct()
        {

        }
        public void UpdateProduct()
        {

        }
        public void DeleteProduct()
        {

        }
    }
}



