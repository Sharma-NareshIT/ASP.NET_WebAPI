1. Install SwashBuckle from NuGet Package Manager
2. Goto "SwaggerConfig.cs" in "App_Start" folder
3. Enable Swagger

Syntax:
 public class SwaggerConfig
 {
     public static void Register()
     {
       var thisAssembly = typeof(SwaggerConfig).Assembly;
       GlobalConfiguration.Configuration.EnableSwagger(c=> c.SingleApiVersion("v1", "Amazon API")).EnableSwaggerUi();
     }
 }

4. Run you API Application
5. Request the following from URL

        https://localhost:port/swagger

- Request Header
- Request Body
- Response Body
- Response Status Codes


	Handling GET request in Web API
	------------------------------------------------
- The Get() in API returns list of all products in JSON format.
	GET	:  api/demo

- The Get(int id) in API returns the product that matches with specified Product Id.

	GET	: api/demo/{id}

- Client can consume the data and present by using
	"XmlHttpRequest" object

- JavaScript uses "XmlHttpRequest" object
- JQuery uses "$.Ajax()"  or  "$.getJSON()"
- Angular Js uses  "$http" service
- Angular uses  HttpClient  service


Consuming the API Data Client Side using JQuery
------------------------------------------------------------------------
1. Create a API  Controller with GET requests

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using AmazonAPI.Models;

namespace AmazonAPI.Controllers
{
    public class DemoController : ApiController
    {
        ProductsContext db = new ProductsContext();
        
        //GET - api/demo
        public IHttpActionResult Get()
        {
            return Ok(db.ProductsTable.ToList());
        }

        //GET - api/demo/1
        public IHttpActionResult Get(int? id)
        {
            Product product = db.ProductsTable.Find(id);
            if(product==null)
            {
                return NotFound();
            }
            return Ok(product);
        }
    }
}


2. Install Bootstrap and JQuery from Nuget Package Manager
	        Content
	        |     |_bootstrap.css
	        |
	        Scripts
	              |_jquery.js

3. Add a new HTML Page into project
	          index.html
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <style>
        .section {
            margin-top:30px;
        }
    </style>
    <link rel="stylesheet" href="Content/bootstrap.css" />
    <script src="Scripts/jquery-3.5.1.js"></script>
    <script>
        $(function () {
            var getallUri = "api/demo";
            $("#btnGetAll").click(function () {
                $.getJSON(getallUri, function (data) {
                    $.each(data, function (key, value) {
                        $(`<tr><td>${value.ProductId}</td><td>${value.Name}</td><td>${value.Price}</td></tr>`).appendTo("#tbody");
                    })
                })
            })
        })
    </script>
</head>
<body>
    <div class="container">
        <div>
            <div class="btn-toolbar bg-danger justify-content-between">
                <h2>Amazon API</h2>
                <div class="btn-group">                   
                    <button id="btnGetAll" type="button" class="btn btn-danger">View Products</button>
                </div>
            </div>
        </div>
        <div class="section">
            <h2>Products List</h2>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Product Id</th>
                        <th>Name</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody id="tbody">

                </tbody>
            </table>
        </div>
    </div>
</body>
</html>





